(dp1
S'output'
p2
S"<type 'exceptions.ValueError'> need more than 1 value to unpack"
p3
sS'layer'
p4
S'/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/applications/GRS/controllers/complaint.py'
p5
sS'code'
p6
S'@request.restful()\ndef details():\n\tresponse.view = \'generic.json\'\n\tdef GET(*tmp_args,**status_input):\n\t\tdata = db.complaints(id=request.args[0])\n\t\tret={}\n\t\tret[\'complaint_id\']=data.id\n\t\tret[\'title\']=data.complaint_title\n\t\tret[\'description\']=data.complaint_details\n\t\tret[\'posted_by\']=data.posted_by\n\t\tret[\'image_id\']=data.photo_id\n\t\tret[\'posted_on\']=data.date_posted\n\t\tret[\'work_started\']=data.date_work_taken_on\n\t\tret[\'resolved_on\']=data.date_resolved\n\t\tret[\'upvote_count\']=data.upvotes_count\n\t\tret[\'downvote_count\']=data.downvotes_count\n\t\tret[\'level_name\']=db.complaint_levels(id=db.complaint_domain(id=data.complaint_domain_id).complaint_level_id).complaint_level_name\n\t\tret[\'level_id\']=db.complaint_domain(id=data.complaint_domain_id).complaint_level_id\n\t\tret[\'domain_name\']=db.complaint_domain(id=data.complaint_domain_id).complaint_domain_name\n\t\tret[\'domain_id\']=data.complaint_domain_id\n\n\t\tret[\'status_id\']=data.status_id\n\n\t\tret[\'vote_status\']=data.complaint_title\n\n#\t\tret[\'undertaken_by\']=data.complaint_title\n\n\t\tret[\'previously_read\']=data.complaint_title\n\n\t\tret[\'bookmarked\']=check_bookmark(auth.user.id,data.id)\n\t\treturn dict(data=ret)\n\n\treturn locals()\n\n@request.restful()\ndef levels():\n\tresponse.view = \'generic.json\'\n\tdef GET():\n\t\treturn dict(data = db(db.complaint_levels.id>0).select())\n\treturn locals()\n\n@request.restful()\ndef domains():\n\tresponse.view = \'generic.json\'\n\tdef GET(level_id):\n\t\treturn dict(data = db(db.complaint_domain.complaint_level_id==level_id).select())\n\treturn locals()\n\n@request.restful()\ndef bookmark():\n\tresponse.view = \'generic.json\'\n\tdef GET(complaint_id):\n\t\tdata = db(db.bookmarks.complaint_id==complaint_id).select()\n\t\tif len(data)>0:\n\t\t\treturn dict(bookmarked = True)\n\t\telse:\n\t\t\treturn dict(bookmarked = False)\n\treturn locals()\n\n@request.restful()\ndef status():\n\tresponse.view = \'generic.json\'\n\tdef GET(*tmp_args,**status_input):\n\t\tif(len(tmp_args) and tmp_args[0]==\'comment\'):\n\t\t\tret_status = db[db.status_comments].validate_and_insert(**status_input)\n\t\t\tbook_usrs = db(db.bookmarks.complaint_id==request.vars.complaint_id).select()\n\t\t\tfor index in range(len(book_usrs)):\n\t\t\t\tnotif = db.notifications.insert(user_id=book_usrs[index].user_id,notification_type=2,notification_item_id=ret_cmnt)\n\t\t\treturn ret_status\n\t\telse:\n\t\t\tret_status = db[db.complaint_status].validate_and_insert(**status_input)\n\t\t\tdb.executesql("UPDATE complaints SET status_id="+str(ret_status.id)+" WHERE id="+str(request.vars.complaint_id_)+\';\')\n\t\t\tbook_usrs = db(db.bookmarks.complaint_id==request.vars.complaint_id).select()\n\t\t\tfor index in range(len(book_usrs)):\n\t\t\t\tnotif = db.notifications.insert(user_id=book_usrs[index].user_id,notification_type=2,notification_item_id=ret_cmnt)\n\t\t\treturn ret_status\n\tdef POST(*tmp_args,**status_input):\n\t\tif(len(tmp_args) and tmp_args[0]==\'comment\'):\n\t\t\tret_status = db[db.status_comments].validate_and_insert(**status_input)\n\t\t\tbook_usrs = db(db.bookmarks.complaint_id==request.vars.complaint_id).select()\n\t\t\tfor index in range(len(book_usrs)):\n\t\t\t\tnotif = db.notifications.insert(user_id=book_usrs[index].user_id,notification_type=2,notification_item_id=ret_cmnt)\n\t\t\treturn ret_status\n\t\telse:\n\t\t\tret_status = db[db.complaint_status].validate_and_insert(**status_input)\n\t\t\tdb.executesql("UPDATE complaints SET status_id="+str(ret_status.id)+" WHERE id="+str(request.vars.complaint_id_)+\';\')\n\t\t\tbook_usrs = db(db.bookmarks.complaint_id==request.vars.complaint_id).select()\n\t\t\tfor index in range(len(book_usrs)):\n\t\t\t\tnotif = db.notifications.insert(user_id=book_usrs[index].user_id,notification_type=2,notification_item_id=ret_cmnt)\n\t\t\treturn ret_status\n\treturn locals()\n\n@request.restful()\ndef complaints():\n\tresponse.view = \'generic.json\'\n\tdef GET(*tmp_args,**status_input):\n\t\tif not auth.is_logged_in() :\n\t\t\treturn dict()\n\t\tcomplaint_section=request.args[0]\n\t\tuser_id=auth.user.id\n\t\tif(complaint_section==\'bookmarked\'):\n\t\t\tall_made = db(db.bookmarks.complaint_id>0).select()\n\t\t\tret = []\n\t\t\tfor index in range(len(all_made)):\n\t\t\t\tfrom_user = all_made[index].user_id\n\t\t\t\tuser_id1 = db.users(id=user_id).id\n\t\t\t\tif(from_user == user_id1):\n\t\t\t\t\ttemp=db.complaints(id=all_made[index].complaint_id)\n\t\t\t\t\ttemp["bookmarked"]=check_bookmark(user_id,all_made[index].complaint_id)\n\t\t\t\t\ttemp["to_resolve"]=check_resolve(user_id,all_made[index].complaint_id)\n\t\t\t\t\ttemp["solvable"]=check_solvable(user_id,all_made[index].complaint_id)\n\t\t\t\t\tret.append(temp)\n\t\t\treturn dict(data = ret)\n\t\telif(complaint_section==\'concern\'):\n\t\t\tall_made = db(db.complaints_concerning_user.complaint_id>0).select()\n\t\t\tret = []\n\t\t\tfor index in range(len(all_made)):\n\t\t\t\tfrom_user = all_made[index].user_id\n\t\t\t\tto_group = all_made[index].group_id\n\t\t\t\tuser_id1 = db.users(id=user_id).id\n\t\t\t\tif(from_user == user_id1):\n\t\t\t\t\ttemp=db.complaints(id=all_made[index].complaint_id)\n\t\t\t\t\ttemp["bookmarked"]=check_bookmark(user_id,all_made[index].complaint_id)\n\t\t\t\t\ttemp["to_resolve"]=check_resolve(user_id,all_made[index].complaint_id)\n\t\t\t\t\ttemp["solvable"]=check_solvable(user_id,all_made[index].complaint_id)\n\t\t\t\t\tret.append(temp)\n\t\t\t\telse:\n\t\t\t\t\tall_members = db(db.group_members.group_id==to_group).select()\n\t\t\t\t\tfor index1 in range(len(all_members)):\n\t\t\t\t\t\tuser1 = db.users(id=all_members[index1].user_id).id\n\t\t\t\t\t\tif(user1==user_id1):\n\t\t\t\t\t\t\ttemp=db.complaints(id=all_made[index].complaint_id)\n\t\t\t\t\t\t\ttemp["bookmarked"]=check_bookmark(user_id,all_made[index].complaint_id)\n\t\t\t\t\t\t\ttemp["to_resolve"]=check_resolve(user_id,all_made[index].complaint_id)\n\t\t\t\t\t\t\ttemp["solvable"]=check_solvable(user_id,all_made[index].complaint_id)\n\t\t\t\t\t\t\tret.append(temp)\n\t\t\treturn dict(data = ret)\n\t\telif(complaint_section==\'resolve\'):\n\t\t\tall_made = db(db.complaints_with_resolving_rights_to_user.complaint_id>0).select()\n\t\t\tret = []\n\t\t\tfor index in range(len(all_made)):\n\t\t\t\tfrom_user = all_made[index].user_id\n\t\t\t\tto_group = all_made[index].group_id\n\t\t\t\tuser_id1 = db.users(id=user_id).id\n\t\t\t\tif(from_user == user_id1):\n\t\t\t\t\ttemp=db.complaints(id=all_made[index].complaint_id)\n\t\t\t\t\ttemp["bookmarked"]=check_bookmark(user_id,all_made[index].complaint_id)\n\t\t\t\t\ttemp["to_resolve"]=check_resolve(user_id,all_made[index].complaint_id)\n\t\t\t\t\ttemp["solvable"]=check_solvable(user_id,all_made[index].complaint_id)\n\t\t\t\t\tret.append(temp)\n\t\t\t\telse:\n\t\t\t\t\tall_members = db(db.group_members.group_id==to_group).select()\n\t\t\t\t\tfor index1 in range(len(all_members)):\n\t\t\t\t\t\tuser1 = db.users(id=all_members[index1].user_id).id\n\t\t\t\t\t\tif(user1==user_id1):\n\t\t\t\t\t\t\ttemp=db.complaints(id=all_made[index].complaint_id)\n\t\t\t\t\t\t\ttemp["bookmarked"]=check_bookmark(user_id,all_made[index].complaint_id)\n\t\t\t\t\t\t\ttemp["to_resolve"]=check_resolve(user_id,all_made[index].complaint_id)\n\t\t\t\t\t\t\ttemp["solvable"]=check_solvable(user_id,all_made[index].complaint_id)\n\t\t\t\t\t\t\tret.append(temp)\n\t\t\treturn dict(data = ret)\n\t\telif(complaint_section==\'solve\'):\n\t\t\tall_made = db(db.complaints_made_to_user.complaint_id>0).select()\n\t\t\tret = []\n\t\t\tfor index in range(len(all_made)):\n\t\t\t\tfrom_user = all_made[index].user_id\n\t\t\t\tto_group = all_made[index].group_id\n\t\t\t\tuser_id1 = db.users(id=user_id).id\n\t\t\t\tif(from_user == user_id1):\n\t\t\t\t\ttemp=db.complaints(id=all_made[index].complaint_id)\n\t\t\t\t\ttemp["bookmarked"]=check_bookmark(user_id,all_made[index].complaint_id)\n\t\t\t\t\ttemp["to_resolve"]=check_resolve(user_id,all_made[index].complaint_id)\n\t\t\t\t\ttemp["solvable"]=check_solvable(user_id,all_made[index].complaint_id)\n\t\t\t\t\tret.append(temp)\n\t\t\t\telse:\n\t\t\t\t\tall_members = db(db.group_members.group_id==to_group).select()\n\t\t\t\t\tfor index1 in range(len(all_members)):\n\t\t\t\t\t\tuser1 = db.users(id=all_members[index1].user_id).id\n\t\t\t\t\t\tif(user1==user_id1):\n\t\t\t\t\t\t\ttemp=db.complaints(id=all_made[index].complaint_id)\n\t\t\t\t\t\t\ttemp["bookmarked"]=check_bookmark(user_id,all_made[index].complaint_id)\n\t\t\t\t\t\t\ttemp["to_resolve"]=check_resolve(user_id,all_made[index].complaint_id)\n\t\t\t\t\t\t\ttemp["solvable"]=check_solvable(user_id,all_made[index].complaint_id)\n\t\t\t\t\t\t\tret.append(temp)\n\t\t\treturn dict(data = ret)\n\treturn locals()\n\n\n@request.restful()\ndef create():\n\tresponse.view = \'generic.json\'\n\tdef make_complaint(complaint_id,user_id,present_level_name,present_domain_name,affectt,resolvv,solvv):\n\t\tif present_level_name==\'Individual\':\n\t\t\tcmplt_rslv = db.complaints_with_resolving_rights_to_user.insert(complaint_id=complaint_id,id_type=0,user_id=user_id)\n\t\t\tconcern = db.complaints_concerning_user.insert(complaint_id=complaint_id,id_type=0,user_id=user_id)\n\t\t\tif present_domain_name==\'Electricity\':\n\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'Electricity Department\').id)\n\t\t\telif present_domain_name==\'Plumbing\':\n\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'Plumbing Department\').id)\n\t\t\telif present_domain_name==\'Carpentry\':\n\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'Carpentry Department\').id)\n\t\t\telif present_domain_name==\'UG Section\':\n\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'UG Section\').id)\n\t\t\telif present_domain_name==\'PG Section\':\n\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'PG Section\').id)\n\t\t\telif present_domain_name==\'Accounts Section\':\n\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'Accounts Section\').id)\n\t\t\telif present_domain_name==\'Students Counselling Service\':\n\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'Students Counselling Service\').id)\n\t\t\telif present_domain_name==\'Ragging\':\n\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'Students Counselling Service\').id)\n\t\t\telif present_domain_name==\'Hostel Administration\':\n\t\t\t\thstl = db.users(id=user_id).hostel_id;\n\t\t\t\thostel_admin_grp = db.hostels(id=hstl).hostel_admin_group_id;\n\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=hostel_admin_grp)\n\t\t\telif present_domain_name==\'Security\':\n\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'Security Department\').id)\t\t\t\n\t\t\telif present_domain_name==\'Miscellaneous\':\n\t\t\t\tfor index in range(len(solvv)):\n\t\t\t\t\tif solvv.type==\'1\':\n\t\t\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=solvv.id)\n\t\t\t\t\telse:\n\t\t\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=0,user_id=solvv.id)\n\t\t\t\tfor index in range(len(resolvv)):\n\t\t\t\t\tif resolvv.type==\'1\':\n\t\t\t\t\t\tcmplt = db.complaints_with_resolving_rights_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=resolvv.id)\n\t\t\t\t\telse:\n\t\t\t\t\t\tcmplt = db.complaints_with_resolving_rights_to_user.insert(complaint_id=complaint_id,id_type=0,user_id=resolvv.id)\n\t\t\t\t\t\n\t\t\t\tfor index in range(len(affectt)):\n\t\t\t\t\tif resolvv.type==\'1\':\n\t\t\t\t\t\tcmplt = db.complaints_concerning_user.insert(complaint_id=complaint_id,id_type=1,group_id=affectt.id)\n\t\t\t\t\telse:\n\t\t\t\t\t\tcmplt = db.complaints_concerning_user.insert(complaint_id=complaint_id,id_type=0,user_id=affectt.id)\n\n\t\telif present_level_name==\'Hostel\':\n\n\t\t\thstl = db.users(id=user_id).hostel_id;\n\t\t\thostel_admin_grp = db.hostels(id=hstl).hostel_admin_group_id;\n\t\t\thostel_res_grp = db.hostels(id=hstl).hostel_residents_group_id;\n\t\t\tmess_secretry = db.hostel_management(hostel_id=hstl).mess_secretary_user_id\n\t\t\tmaintenance_secretry = db.hostel_management(hostel_id=hstl).mess_secretary_user_id\n\t\t\tsports_secretry = db.hostel_management(hostel_id=hstl).mess_secretary_user_id\n\t\t\tconcern = db.complaints_concerning_user.insert(complaint_id=complaint_id,id_type=1,group_id=hostel_res_grp)\n\t\t\tconcern = db.complaints_concerning_user.insert(complaint_id=complaint_id,id_type=1,group_id=hostel_admin_grp)\n\t\t\tif present_domain_name==\'Infrastructure\':\n\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=hostel_admin_grp)\n\t\t\t\tcmplt_rslv = db.complaints_with_resolving_rights_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=hostel_admin_grp)\n\t\t\telif present_domain_name==\'Mess\':\n\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=0,user_id=mess_secretry)\n\t\t\t\tcmplt_rslv = db.complaints_with_resolving_rights_to_user.insert(complaint_id=complaint_id,id_type=0,user_id=mess_secretry)\n\t\t\telif present_domain_name==\'Administration\':\n\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=hostel_admin_grp)\n\t\t\t\tcmplt_rslv = db.complaints_with_resolving_rights_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=hostel_admin_grp)\n\t\t\telif present_domain_name==\'Security\':\n\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=hostel_admin_grp)\n\t\t\t\tcmplt_rslv = db.complaints_with_resolving_rights_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=hostel_admin_grp)\n\t\t\telif present_domain_name==\'Sports\':\n\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=0,user_id=sports_secretry)\n\t\t\t\tcmplt_rslv = db.complaints_with_resolving_rights_to_user.insert(complaint_id=complaint_id,id_type=0,user_id=sports_secretry)\n\t\t\telif present_domain_name==\'Maintenance\':\n\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=0,user_id=maintenance_secretry)\n\t\t\t\tcmplt_rslv = db.complaints_with_resolving_rights_to_user.insert(complaint_id=complaint_id,id_type=0,user_id=maintenance_secretary)\n\n\t\t\telif present_domain_name==\'Miscellaneous\':\n\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=hostel_admin_grp)\n\t\t\t\tcmplt_rslv = db.complaints_with_resolving_rights_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=hostel_admin_grp)\n\n\t\telif present_level_name==\'Institute\':\n\t\t\tconcern = db.complaints_concerning_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'Institute\').id)\n\t\t\tconcern = db.complaints_concerning_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'Institute Administration\').id)\n\t\t\tif present_domain_name==\'Infrastructure\':\n\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'Institute Administration\').id)\n\t\t\t\tcmplt_rslv = db.complaints_with_resolving_rights_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'Institute Administration\').id)\n\t\t\telif present_domain_name==\'Administration\':\n\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'Institute Administration\').id)\n\t\t\t\tcmplt_rslv = db.complaints_with_resolving_rights_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'Institute Administration\').id)\n\t\t\telif present_domain_name==\'Canteen and Food Outlets\':\n\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'Institute Administration\').id)\n\t\t\t\tcmplt_rslv = db.complaints_with_resolving_rights_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'Institute Administration\').id)\n\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'BSW\').id)\n\t\t\t\tcmplt_rslv = db.complaints_with_resolving_rights_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'BSW\').id)\n\t\t\telif present_domain_name==\'Security\':\n\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'Institute Administration\').id)\n\t\t\t\tcmplt_rslv = db.complaints_with_resolving_rights_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'Institute Administration\').id)\n\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'BSW\').id)\n\t\t\t\tcmplt_rslv = db.complaints_with_resolving_rights_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'BSW\').id)\n\t\t\telif present_domain_name==\'Sports\':\n\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'BSA\').id)\n\t\t\t\tcmplt_rslv = db.complaints_with_resolving_rights_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'BSA\').id)\n\t\t\telif present_domain_name==\'Culture\':\n\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'BRCA\').id)\n\t\t\t\tcmplt_rslv = db.complaints_with_resolving_rights_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'BRCA\').id)\n\t\t\telif present_domain_name==\'Academics\':\n\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'Institute Administration\').id)\n\t\t\t\tcmplt_rslv = db.complaints_with_resolving_rights_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'Institute Administration\').id)\n\t\t\telif present_domain_name==\'Computer Services Centre\':\n\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'Computer Services Centre\').id)\n\t\t\t\tcmplt_rslv = db.complaints_with_resolving_rights_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'Computer Services Centre\').id)\n\t\t\telif present_domain_name==\'Maintenance\':\n\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'Institute Administration\').id)\n\t\t\t\tcmplt_rslv = db.complaints_with_resolving_rights_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=db.user_group_names(group_name=\'Institute Administration\').id)\n\n\n\t\t\telif present_domain_name==\'Miscellaneous\':\n\t\t\t\tcmplt = db[db.complaints].validate_and_insert(**complaint_input)\n\n\t\telif present_domain_name==\'Miscellaneous\':\n\t\t\tfor index in range(len(solvv)):\n\t\t\t\tif solvv.type==\'1\':\n\t\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=solvv.id)\n\t\t\t\telse:\n\t\t\t\t\tcmplt = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=0,user_id=solvv.id)\n\t\t\tfor index in range(len(resolvv)):\n\t\t\t\tif resolvv.type==\'1\':\n\t\t\t\t\tcmplt = db.complaints_with_resolving_rights_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=resolvv.id)\n\t\t\t\telse:\n\t\t\t\t\tcmplt = db.complaints_with_resolving_rights_to_user.insert(complaint_id=complaint_id,id_type=0,user_id=resolvv.id)\n\t\t\t\t\n\t\t\tfor index in range(len(affectt)):\n\t\t\t\tif resolvv.type==\'1\':\n\t\t\t\t\tcmplt = db.complaints_concerning_user.insert(complaint_id=complaint_id,id_type=1,group_id=affectt.id)\n\t\t\t\telse:\n\t\t\t\t\tcmplt = db.complaints_concerning_user.insert(complaint_id=complaint_id,id_type=0,user_id=affectt.id)\n\n\tdef POST(*tmp_args,**complaint_input):\n\t\tcmpln={}\n\t\tcmpln[\'complaint_title\']=complaint_input[\'title\']\n\t\tcmpln[\'complaint_details\']=complaint_input[\'description\']\n\t\tcmpln[\'posted_by\']=auth.user.id\n\t\ttry:\n\t\t\tcmpln[\'picture_id\']=complaint_input[\'image_id\']\n\t\texcept:\n\t\t\tprint \'missing parameter\'\n\t\ttry:\n\t\t\tcmpln[\'complaint_level_id\']=complaint_input[\'level_id\']\n\t\texcept:\n\t\t\tprint \'missing parameter\'\n\t\t\n\t\ttry:\n\t\t\tcmpln[\'downvotes_count\']=0\n\t\texcept:\n\t\t\tprint \'missing parameter\'\n\t\t\n\t\ttry:\n\t\t\tcmpln[\'upvotes_count\']=0\n\t\texcept:\n\t\t\tprint \'missing parameter\'\n\t\t\n\t\ttry:\n\t\t\tcmpln[\'complaint_domain_id\']=complaint_input[\'domain_id\']\n\t\texcept:\n\t\t\tprint \'missing parameter\'\n\t\tcmplt = db[db.complaints].validate_and_insert(**cmpln)\n\t\tcomplaint_id = cmplt.id\n\t\tuser_id = db.users(id=auth.user.id)\n\t\tpresent_domain_name = db.complaint_domain(id=complaint_input[\'domain_id\']).complaint_domain_name\n\t\tpresent_level_name = db.complaint_levels(id=db.complaint_domain(id=request.vars.domain_id).complaint_level_id).complaint_level_name\n\t\taffectin={}\n\t\tcmpln_to={}\n\t\tcmpln_rsslv={}\n\t\t\n\t\ttry:\n\t\t\taffectin=complaint_input[\'complaint_affecting\']\n\t\texcept:\n\t\t\tprint \'missing parameter\'\n\n\t\ttry:\n\t\t\tcmpl_to=complaint_input[\'complaint_to\']\n\t\texcept:\n\t\t\tprint \'missing parameter\'\t\t\n\t\t\n\t\ttry:\n\t\t\taffectin=complaint_input[\'resolvable_by\']\n\t\texcept:\n\t\t\tprint \'missing parameter\'\n\t\t\n\t\treturn make_complaint(complaint_id,user_id,present_level_name,present_domain_name,affectin,cmpln_to,cmpln_rsslv)\n\tdef GET(*tmp_args,**complaint_input):\n\t\tcmpln={}\n\t\tcmpln[\'complaint_title\']=complaint_input[\'title\']\n\t\tcmpln[\'complaint_details\']=complaint_input[\'description\']\n\t\tcmpln[\'posted_by\']=auth.user.id\n\t\ttry:\n\t\t\tcmpln[\'picture_id\']=complaint_input[\'image_id\']\n\t\texcept:\n\t\t\tprint \'missing parameter\'\n\t\ttry:\n\t\t\tcmpln[\'complaint_level_id\']=complaint_input[\'level_id\']\n\t\texcept:\n\t\t\tprint \'missing parameter\'\n\t\t\n\t\ttry:\n\t\t\tcmpln[\'downvotes_count\']=0\n\t\texcept:\n\t\t\tprint \'missing parameter\'\n\t\t\n\t\ttry:\n\t\t\tcmpln[\'upvotes_count\']=0\n\t\texcept:\n\t\t\tprint \'missing parameter\'\n\t\t\n\t\ttry:\n\t\t\tcmpln[\'complaint_domain_id\']=complaint_input[\'domain_id\']\n\t\texcept:\n\t\t\tprint \'missing parameter\'\n\t\tcmplt = db[db.complaints].validate_and_insert(**cmpln)\n\t\tcomplaint_id = cmplt.id\n\t\tuser_id = db.users(id=auth.user.id)\n\t\tpresent_domain_name = db.complaint_domain(id=complaint_input[\'domain_id\']).complaint_domain_name\n\t\tpresent_level_name = db.complaint_levels(id=db.complaint_domain(id=request.vars.domain_id).complaint_level_id).complaint_level_name\n\t\taffectin={}\n\t\tcmpln_to={}\n\t\tcmpln_rsslv={}\n\t\t\n\t\ttry:\n\t\t\taffectin=complaint_input[\'complaint_affecting\']\n\t\texcept:\n\t\t\tprint \'missing parameter\'\n\n\t\ttry:\n\t\t\tcmpl_to=complaint_input[\'complaint_to\']\n\t\texcept:\n\t\t\tprint \'missing parameter\'\t\t\n\t\t\n\t\ttry:\n\t\t\taffectin=complaint_input[\'resolvable_by\']\n\t\texcept:\n\t\t\tprint \'missing parameter\'\n\t\t\n\t\treturn make_complaint(complaint_id,user_id,present_level_name,present_domain_name,affectin,cmpln_to,cmpln_rsslv)\n\treturn locals()\n\n@request.restful()\ndef follow():\n\tresponse.view = \'generic.json\'\n\tdef POST(*tmp_args,**follow_input):\n\t\tif not auth.is_logged_in():\n\t\t\treturn dict()\n\t\tfllw = db[db.bookmarks].validate_and_insert(**follow_input)\n\t\tdb.executesql(\'UPDATE bookmarks SET user_id=\'+str(auth.user.id)+\' WHERE id=\'+str(fllw.id)+\';\')\n\t\treturn dict(success=True)\n\tdef GET(*tmp_args,**follow_input):\n\t\tif not auth.is_logged_in():\n\t\t\treturn dict()\n\t\tfllw = db[db.bookmarks].validate_and_insert(**follow_input)\n\t\tdb.executesql(\'UPDATE bookmarks SET user_id=\'+str(auth.user.id)+\' WHERE id=\'+str(fllw.id)+\';\')\n\t\treturn dict(success=True)\n\treturn locals()\n\n@request.restful()\ndef unfollow():\n\tresponse.view = \'generic.json\'\n\tdef POST(*tmp_args,**follow_input):\n\t\tif not auth.is_logged_in():\n\t\t\treturn dict()\n\t\tdb.executesql(\'DELETE FROM bookmarks WHERE complaint_id=\'+str(request.vars.complaint_id)+\' AND user_id=\'+str(auth.user.id)+\';\')\n\t\treturn dict(success=True)\n\tdef GET(*tmp_args,**follow_input):\n\t\tif not auth.is_logged_in():\n\t\t\treturn dict()\n\t\tdb.executesql(\'DELETE FROM bookmarks WHERE complaint_id=\'+str(request.vars.complaint_id)+\' AND user_id=\'+str(auth.user.id)+\';\')\n\t\treturn dict(success=True)\n\treturn locals()\n\n@request.restful()\ndef read():\n\tresponse.view = \'generic.json\'\n\tdef POST(*tmp_args,**follow_input):\n\t\treturn db[db.complaint_read].validate_and_insert(**follow_input)\n\tdef GET(*tmp_args,**follow_input):\n\t\treturn db[db.complaint_read].validate_and_insert(**follow_input)\n\treturn locals()\n\n@request.restful()\ndef is_read():\n\tresponse.view = \'generic.json\'\n\tdef GET(complaint_id):\n\t\tdata = db(db.complaint_read.complaint_id==complaint_id).select()\n\t\tif len(data)>0:\n\t\t\treturn dict(read = True)\n\t\telse:\n\t\t\treturn dict(read = False)\n    \treturn locals()\n\n@request.restful()\ndef redirect():\n\tresponse.view = \'generic.json\'\n\tdef POST(*tmp_args,**follow_input):\n\t\tuserid_from = request.vars.redirect_from\n\t\tredirect_type = request.vars.redirect_to_type\n\t\tuserid_to = request.vars.redirect_to\n\t\tcomplaint_id = request.vars.complaint_id\n\t\tdone = db.executesql(\'UPDATE complaints SET redirected_to_user_id=\'+str(userid_to)+\', redirected_to_type=\'+str(redirect_type)+\', redirected_by_user_id=\'+str(userid_from)+\' WHERE id=\'+str(complaint_id)+\';\')\n\t\tif(redirect_type==0):\n\t\t\tsolve_add = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=0,user_id=userid_to)\n\t\t\tif(check_resolve(userid_from,complaint_id)):\n\t\t\t\tresolve_add = db.complaints_with_resolving_rights_to_user.insert(complaint_id=complaint_id,id_type=0,user_id=userid_to)\n\t\telse:\n\t\t\tsolve_add = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=userid_to)\n\t\t\tuserid_frm = db.users(id=userid_from).id\n\t\t\tif(check_resolve(userid_frm,complaint_id)):\n\t\t\t\tresolve_add = db.complaints_with_resolving_rights_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=userid_to)\n\t\treturn dict(success=True)\n\tdef GET(*tmp_args,**follow_input):\n\t\tuserid_from = request.vars.redirect_from\n\t\tredirect_type = request.vars.redirect_to_type\n\t\tuserid_to = request.vars.redirect_to\n\t\tcomplaint_id = request.vars.complaint_id\n\t\tdone = db.executesql(\'UPDATE complaints SET redirected_to_user_id=\'+str(userid_to)+\', redirected_to_type=\'+str(redirect_type)+\', redirected_by_user_id=\'+str(userid_from)+\' WHERE id=\'+str(complaint_id)+\';\')\n\t\tif(redirect_type==0):\n\t\t\tsolve_add = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=0,user_id=userid_to)\n\t\t\tif(check_resolve(userid_from,complaint_id)):\n\t\t\t\tresolve_add = db.complaints_with_resolving_rights_to_user.insert(complaint_id=complaint_id,id_type=0,user_id=userid_to)\n\t\telse:\n\t\t\tsolve_add = db.complaints_made_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=userid_to)\n\t\t\tuserid_frm = db.users(id=userid_from).id\n\t\t\tif(check_resolve(userid_frm,complaint_id)):\n\t\t\t\tresolve_add = db.complaints_with_resolving_rights_to_user.insert(complaint_id=complaint_id,id_type=1,group_id=userid_to)\n\t\treturn dict(success=True)\n\treturn locals()\n\n\n@request.restful()\ndef comment():\n\tresponse.view = \'generic.json\'\n\tdef POST(*tmp_args,**follow_input):\n\t\tif not auth.is_logged_in():\n\t\t\treturn dict()\n\t\tret_cmnt = db[db.comments].validate_and_insert(**follow_input)\n\t\tdb.executesql(\'UPDATE comments SET user_id=\'+str(auth.user.id)+\' WHERE id=\'+str(ret_cmnt.id)+\';\')\n\t\tbook_usrs = db(db.bookmarks.complaint_id==request.vars.complaint_id).select()\n\t\tfor index in range(len(book_usrs)):\n\t\t\tnotif = db.notifications.insert(user_id=book_usrs[index].user_id,notification_type=0,notification_item_id=ret_cmnt)\n\t\treturn ret_cmnt\n\tdef GET(*tmp_args,**follow_input):\n\t\tif not auth.is_logged_in():\n\t\t\treturn dict()\n\t\tret_cmnt = db[db.comments].validate_and_insert(**follow_input)\n\t\tdb.executesql(\'UPDATE comments SET user_id=\'+str(auth.user.id)+\' WHERE id=\'+str(ret_cmnt.id)+\';\')\n\t\tbook_usrs = db(db.bookmarks.complaint_id==request.vars.complaint_id).select()\n\t\tfor index in range(len(book_usrs)):\n\t\t\tnotif = db.notifications.insert(user_id=book_usrs[index].user_id,notification_type=0,notification_item_id=ret_cmnt)\n\t\treturn ret_cmnt\n\treturn locals()\n\n\ndef check_resolve(user_id,complaint_id):\n\tall_made = db(db.complaints_with_resolving_rights_to_user.complaint_id==complaint_id).select()\n\tret = []\n\tfor index in range(len(all_made)):\n\t\tfrom_user = all_made[index].user_id\n\t\tto_group = all_made[index].group_id\n\t\tuser_id1 = user_id\n\t\tif(from_user == user_id1):\n\t\t\tret.append(all_made[index])\n\t\telse:\n\t\t\tall_members = db(db.group_members.group_id==to_group).select()\n\t\t\tfor index1 in range(len(all_members)):\n\t\t\t\tuser1 = db.users(id=all_members[index1].user_id).id\n\t\t\t\tif(user1==user_id1):\n\t\t\t\t\tret.append(all_made[index])\n\treturn (len(ret)>0)\n\n@request.restful()\ndef resolvable():\n\tresponse.view = \'generic.json\'\n\tdef POST(*tmp_args,**follow_input):\n\t\tif not auth.is_logged_in():\n\t\t\treturn dict()\n\t\telse:\n\t\t\treturn dict(resolvable = check_resolve(auth.user.id,request.vars.complaint_id))\n\tdef GET(*tmp_args,**follow_input):\n\t\tif not auth.is_logged_in():\n\t\t\treturn dict()\n\t\telse:\n\t\t\treturn dict(resolvable = check_resolve(auth.user.id,request.vars.complaint_id))\n\treturn locals()\n\n\ndef check_bookmark(user_id,complaint_id):\n\tall_made = db(db.bookmarks.complaint_id==complaint_id).select()\n\tret = []\n\tfor index in range(len(all_made)):\n\t\tfrom_user = all_made[index].user_id\n\t\tuser_id1 = user_id\n\t\tif(from_user == user_id1):\n\t\t\tret.append(all_made[index])\n\treturn (len(ret)>0)\n\n\n@request.restful()\ndef is_bookmark():\n\tresponse.view = \'generic.json\'\n\tdef POST(*tmp_args,**follow_input):\n\t\tif not auth.is_logged_in():\n\t\t\treturn dict()\n\t\telse:\n\t\t\treturn dict(is_bookmark = check_bookmark(auth.user.id,request.vars.complaint_id))\n\tdef GET(*tmp_args,**follow_input):\n\t\tif not auth.is_logged_in():\n\t\t\treturn dict()\n\t\telse:\n\t\t\treturn dict(is_bookmark = check_bookmark(auth.user.id,request.vars.complaint_id))\n\treturn locals()\n\n\ndef check_solvable(user_id,complaint_id):\n\tall_made = db(db.complaints_made_to_user.complaint_id==complaint_id).select()\n\tret = []\n\tfor index in range(len(all_made)):\n\t\tfrom_user = all_made[index].user_id\n\t\tuser_id1 = user_id\n\t\tif(from_user == user_id1):\n\t\t\tret.append(all_made[index])\n\treturn (len(ret)>0)\n\n\ndef ret_vote(user_id,complaint_id):\n\tall_made = db(db.votes.complaint_id==complaint_id).select()\n\tret = 0\n\tfor index in range(len(all_made)):\n\t\tfrom_user = all_made[index].user_id\n\t\tuser_id1 = user_id\n\t\tif(from_user == user_id1):\n\t\t\tret=all_made[index]\n\tif not \tret==0:\n\t\treturn dict(voted=True,vote=ret)\n\telse:\n\t\treturn dict(voted=False)\n\n\ndef correct_vote(user_id,complaint_id):\n\tall_made = db(db.votes.complaint_id==complaint_id).select()\n\tret = 0\n\tfor index in range(len(all_made)):\n\t\tfrom_user = all_made[index].user_id\n\t\tuser_id1 = user_id\n\t\tif(from_user == user_id1):\n\t\t\tret=all_made[index]\n\tif not \tret==0:\n\t\tif ret.vote_type==-1 :\n\t\t\tprev = db.complaints(id=complaint_id).downvotes_count\n\t\t\tdb.executesql("UPDATE complaints SET downvotes_count="+str(prev-1)+" WHERE id="+str(complaint_id)+\';\')\n\t\telif ret.vote_type==1:\n\t\t\tprev = db.complaints(id=complaint_id).upvotes_count\n\t\t\tdb.executesql("UPDATE complaints SET upvotes_count="+str(prev-1)+" WHERE id="+str(complaint_id)+\';\')\n\ndef correct_vote1(user_id,complaint_id):\n\tall_made = db(db.votes.complaint_id==complaint_id).select()\n\tret = 0\n\tfor index in range(len(all_made)):\n\t\tfrom_user = all_made[index].user_id\n\t\tuser_id1 = user_id\n\t\tif(from_user == user_id1):\n\t\t\tret=all_made[index]\n\tif not \tret==0:\n\t\tif ret.vote_type==-1 :\n\t\t\tprev = db.complaints(id=complaint_id).downvotes_count\n\t\t\tdb.executesql("UPDATE complaints SET downvotes_count="+str(prev+1)+" WHERE id="+str(complaint_id)+\';\')\n\t\telif ret.vote_type==1:\n\t\t\tprev = db.complaints(id=complaint_id).upvotes_count\n\t\t\tdb.executesql("UPDATE complaints SET upvotes_count="+str(prev+1)+" WHERE id="+str(complaint_id)+\';\')\n\n@request.restful()\ndef vote_made():\n\tresponse.view = \'generic.json\'\n\tdef POST(*tmp_args,**follow_input):\n\t\tif not auth.is_logged_in():\n\t\t\treturn dict()\n\t\telse:\n\t\t\treturn ret_vote(auth.user.id,request.vars.complaint_id)\n\tdef GET(*tmp_args,**follow_input):\n\t\tif not auth.is_logged_in():\n\t\t\treturn dict()\n\t\telse:\n\t\t\treturn ret_vote(auth.user.id,request.vars.complaint_id)\n\treturn locals()\n\n\n@request.restful()\ndef vote():\n\tresponse.view = \'generic.json\'\n\tdef POST(*tmp_args,**follow_input):\n\t\tif not auth.is_logged_in():\n\t\t\treturn dict()\n\t\telse:\n\t\t\tcorrect_vote(auth.user.id,request.vars.complaint_id)\n\t\t\tdb.votes.insert(user_id=auth.user.id,vote_type=request.vars.vote_type,complaint_id=request.vars.complaint_id)\n\t\t\treturn dict(success=True)\n\tdef GET(*tmp_args,**follow_input):\n\t\tif not auth.is_logged_in():\n\t\t\treturn dict()\n\t\telse:\n\t\t\tcorrect_vote(auth.user.id,request.vars.complaint_id)\n\t\t\tdb.votes.insert(user_id=auth.user.id,vote_type=request.vars.vote_type,complaint_id=request.vars.complaint_id)\n\t\t\tcorrect_vote1(auth.user.id,request.vars.complaint_id)\n\t\t\treturn dict(success=True)\n\treturn locals()\n\n\'\'\'\n@request.restful()\ndef mark_resolve():\n\tresponse.view = \'generic.json\'\n\tdef POST(*tmp_args,**follow_input):\n\t\tif (not auth.is_logged_in()) or (not check_resolve(auth.user.id,request.vars.complaint_id)):\n\t\t\treturn dict()\n\t\telse:\n\t\t\tcmpln=request.vars.complaint_id\n\t\t\tdtnow=str(datetime.now())\n\t\t\tdb.executesql("UPDATE complaints SET date_resolved=1 WHERE id="+str(request.vars.complaint_id)+\';\')\n\t\t\treturn dict(success=True)\n\tdef GET(*tmp_args,**follow_input):\n\t\tif (not auth.is_logged_in()) or (not check_resolve(auth.user.id,request.vars.complaint_id)):\n\t\t\treturn dict()\n\t\telse:\n\t\t\tcmpln=request.vars.complaint_id\n\t\t\tdtnow=str(datetime.now())\n\t\t\tdb.executesql("UPDATE complaints SET date_resolved=1 WHERE id="+str(request.vars.complaint_id)+\';\')\n\t\t\treturn dict(success=True)\n\treturn locals()\n\n\n@request.restful()\ndef is_resolved():\n\tresponse.view = \'generic.json\'\n\tdef POST(*tmp_args,**follow_input):\n\t\tif (not auth.is_logged_in()) or (not check_resolve(auth.user.id,request.vars.complaint_id)):\n\t\t\treturn dict()\n\t\telse:\n\t\t\tcmpln=request.vars.complaint_id\n\t\t\treturn dict(resolved=db.complaint(date_resolved))\n\tdef GET(*tmp_args,**follow_input):\n\t\tif (not auth.is_logged_in()) or (not check_resolve(auth.user.id,request.vars.complaint_id)):\n\t\t\treturn dict()\n\t\telse:\n\t\t\tcmpln=request.vars.complaint_id\n\t\t\treturn dict(resolved=(db.complaints(id=cmpln)))\n\treturn locals()\n\'\'\'\n\'\'\'\n@request.restful()\ndef is_resolved():\n\tresponse.view = \'generic.json\'\n\tdef POST(*tmp_args,**follow_input):\n\t\tif (not auth.is_logged_in()) or (not check_resolve(auth.user.id,request.vars.complaint_id)):\n\t\t\treturn dict()\n\t\telse:\n\t\t\tcmpln=request.vars.complaint_id\n\t\t\treturn dict(resolved=db.complaint(date_resolved))\n\tdef GET(*tmp_args,**follow_input):\n\t\tif (not auth.is_logged_in()) or (not check_resolve(auth.user.id,request.vars.complaint_id)):\n\t\t\treturn dict()\n\t\telse:\n\t\t\tcmpln=request.vars.complaint_id\n\t\t\treturn dict(resolved=(db.complaints(id=cmpln)))\n\treturn locals()\n\n\'\'\'\n\nresponse._vars=response._caller(complaints)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.ValueError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.ValueError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.ValueError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.ValueError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.ValueError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.ValueError object>'
p23
sS'args'
p24
S"('need more than 1 value to unpack',)"
p25
sS'__reduce__'
p26
S'<built-in method __reduce__ of exceptions.ValueError object>'
p27
sS'__str__'
p28
S"<method-wrapper '__str__' of exceptions.ValueError object>"
p29
sS'__format__'
p30
S'<built-in method __format__ of exceptions.ValueError object>'
p31
sS'__getattribute__'
p32
S"<method-wrapper '__getattribute__' of exceptions.ValueError object>"
p33
sS'__class__'
p34
S"<type 'exceptions.ValueError'>"
p35
sS'__unicode__'
p36
S'<built-in method __unicode__ of exceptions.ValueError object>'
p37
sS'__delattr__'
p38
S"<method-wrapper '__delattr__' of exceptions.ValueError object>"
p39
sS'__subclasshook__'
p40
S'<built-in method __subclasshook__ of type object>'
p41
sS'__repr__'
p42
S"<method-wrapper '__repr__' of exceptions.ValueError object>"
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.ValueError object>'
p47
sS'__doc__'
p48
S"'Inappropriate argument value (of correct type).'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.ValueError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S'need more than 1 value to unpack'
p55
sS'request'
p56
cgluon.html
XML_unpickle
p57
(S's"x\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>GRS</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>concern</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>complaint</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">gsScrollPos</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-9942ebac-63c4-4689-80e7-24e695466b80<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_grievances</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-39bee78a-8e5b-4d17-ad2b-fa503b854ff7<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_grs</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-ac3fbcd4-79ed-4cd7-bcc9-6e4913643197<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_moodleplus</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-25637e95-9386-4286-82f2-1ebf4cebec13<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_sample1</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-69257c23-3e3c-4433-8daa-b0ad4e8056af<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_sample2</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-9b5af82d-a2f9-4dc5-9bb8-cace0eec1b34<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_welcome</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-2aa36f6c-96bf-4b44-aa47-e2ef5290a986<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate, sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CACHE_CONTROL</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>gsScrollPos=; gsScrollPos=; gsScrollPos=; session_id_grievances=127.0.0.1-39bee78a-8e5b-4d17-ad2b-fa503b854ff7; session_id_sample1=127.0.0.1-69257c23-3e3c-4433-8daa-b0ad4e8056af; session_id_sample2=127.0.0.1-9b5af82d-a2f9-4dc5-9bb8-cace0eec1b34; session_id_moodleplus=127.0.0.1-25637e95-9386-4286-82f2-1ebf4cebec13; session_id_welcome=127.0.0.1-2aa36f6c-96bf-4b44-aa47-e2ef5290a986; gsScrollPos=; _ga=GA1.1.333590026.1458794726; _gat=1; session_id_grs=127.0.0.1-ac3fbcd4-79ed-4cd7-bcc9-6e4913643197; session_id_admin=127.0.0.1-9942ebac-63c4-4689-80e7-24e695466b80</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_UPGRADE_INSECURE_REQUESTS</td><td style="vertical-align:top;">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/48.0.2564.116 Chrome/48.0.2564.116 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/GRS/complaint/complaints/concern.json</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>42936</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>user-Z5WAH</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/applications/GRS/&#x27;, &#x27;/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/applications/admin/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x7f9abe2d1b48: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;user-Z5WAH&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;port&#x27;: 8000, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;******&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate, sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cache_control</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>gsScrollPos=; gsScrollPos=; gsScrollPos=; session_id_grievances=127.0.0.1-39bee78a-8e5b-4d17-ad2b-fa503b854ff7; session_id_sample1=127.0.0.1-69257c23-3e3c-4433-8daa-b0ad4e8056af; session_id_sample2=127.0.0.1-9b5af82d-a2f9-4dc5-9bb8-cace0eec1b34; session_id_moodleplus=127.0.0.1-25637e95-9386-4286-82f2-1ebf4cebec13; session_id_welcome=127.0.0.1-2aa36f6c-96bf-4b44-aa47-e2ef5290a986; gsScrollPos=; _ga=GA1.1.333590026.1458794726; _gat=1; session_id_grs=127.0.0.1-ac3fbcd4-79ed-4cd7-bcc9-6e4913643197; session_id_admin=127.0.0.1-9942ebac-63c4-4689-80e7-24e695466b80</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_upgrade_insecure_requests</td><td style="vertical-align:top;">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/48.0.2564.116 Chrome/48.0.2564.116 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>user-Z5WAH</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/GRS/complaint/complaints/concern.json</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>42936</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/GRS/complaint/complaints/concern.json</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>user-Z5WAH</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_original_uri</td><td style="vertical-align:top;">:</td><td><div>/GRS/complaint/complaints/concern.json</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.14.2-stable+timestamp.2016.03.24.22.47.49</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7f9ac31861e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x7f9abe4f8c80&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7f9ab8560a50&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7f9ac31861e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x7f9abe4f8c80&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7f9ab8560a50&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>json</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/applications/GRS/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>complaints</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/applications/GRS/&#x27;, &#x27;/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/applications/admin/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x7f9abe2d1b48: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;user-Z5WAH&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;port&#x27;: 8000, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;******&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>user-Z5WAH</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.14.2-stable+timestamp.2016.03.24.22.47.49</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_scheduler</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_shell</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 3, 29, 23, 31, 32, 597158)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/GRS/complaint/complaints/concern.json</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 3, 29, 18, 1, 32, 597202)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x7f9a8473b710&gt;</div></td></tr></table></div>'
tRp58
sS'frames'
p59
(lp60
(dp61
S'file'
p62
S'/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/gluon/restricted.py'
p63
sS'dump'
p64
(dp65
S'environment'
p66
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}"
p67
sS'ccode'
p68
S'<code object <module> at 0x7f9a850a0ab0, file "/...plications/GRS/controllers/complaint.py", line 1>'
p69
ssS'lnum'
p70
I227
sS'lines'
p71
(dp72
I224
S'            ccode = code'
p73
sI225
S'        else:'
p74
sI226
S'            ccode = compile2(code, layer)'
p75
sI227
S'        exec ccode in environment'
p76
sI228
S'    except HTTP:'
p77
sI229
S'        raise'
p78
sI230
S'    except RestrictedError:'
p79
sI231
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p80
sI222
S'    try:'
p81
sI223
S'        if isinstance(code, types.CodeType):'
p82
ssS'call'
p83
S'(code="@request.restful()\\ndef details():\\n\\tresponse.view...\'\'\'\\n\\nresponse._vars=response._caller(complaints)\\n", environment={\'A\': <class \'gluon.html.A\'>, \'ANY_OF\': <class \'gluon.validators.ANY_OF\'>, \'ASSIGNJS\': <function ASSIGNJS>, \'AppConfig\': <function AppConfig>, \'Auth\': <class \'gluon.tools.Auth\'>, \'B\': <class \'gluon.html.B\'>, \'BEAUTIFY\': <class \'gluon.html.BEAUTIFY\'>, \'BODY\': <class \'gluon.html.BODY\'>, \'BR\': <class \'gluon.html.BR\'>, \'BUTTON\': <class \'gluon.html.BUTTON\'>, ...}, layer=\'/home/user/Local Disk E/COP290/assignment2_1/GRS.../web2py/applications/GRS/controllers/complaint.py\')'
p84
sS'func'
p85
S'restricted'
p86
sa(dp87
g62
S'/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/applications/GRS/controllers/complaint.py'
p88
sg64
(dp89
sg70
I761
sg71
(dp90
I750
S'\t\t\treturn dict(resolved=db.complaint(date_resolved))'
p91
sI751
S'\tdef GET(*tmp_args,**follow_input):'
p92
sI752
S'\t\tif (not auth.is_logged_in()) or (not check_resolve(auth.user.id,request.vars.complaint_id)):'
p93
sI753
S'\t\t\treturn dict()'
p94
sI754
S'\t\telse:'
p95
sI755
S'\t\t\tcmpln=request.vars.complaint_id'
p96
sI756
S'\t\t\treturn dict(resolved=(db.complaints(id=cmpln)))'
p97
sI757
S'\treturn locals()'
p98
sI758
S''
sI759
S"'''"
p99
ssg83
S'()'
p100
sg85
S'<module>'
p101
sa(dp102
g62
S'/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/gluon/globals.py'
p103
sg64
(dp104
S'self'
p105
S'undefined'
p106
sS'f'
S'<function complaints>'
p107
ssg70
I417
sg71
(dp108
I416
S'        self._vars = None'
p109
sI417
S'        self._caller = lambda f: f()'
p110
sI418
S'        self._view_environment = None'
p111
sI419
S'        self._custom_commit = None'
p112
sI420
S'        self._custom_rollback = None'
p113
sI421
S"        self.generic_patterns = ['*']"
p114
sI412
S"        self.flash = ''            # used by the default view layout"
p115
sI413
S'        self.meta = Storage()      # used by web2py_ajax.html'
p116
sI414
S'        self.menu = []             # used by the default view layout'
p117
sI415
S'        self.files = []            # used by web2py_ajax.html'
p118
ssg83
S'(f=<function complaints>)'
p119
sg85
S'<lambda>'
p120
sa(dp121
g62
S'/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/gluon/globals.py'
p122
sg64
(dp123
S'rest_action'
p124
S'<function GET>'
p125
sS'res'
p126
g106
sS'request.args'
p127
S"['concern']"
p128
sS'request'
p129
S"<Storage {'_vars': <Storage {}>, 'function': 'co...ces_Resolution_System/web2py/applications/GRS/'}>"
p130
sS'request.vars'
p131
S'<Storage {}>'
p132
ssg70
I380
sg71
(dp133
I384
S'                except TypeError, e:'
p134
sI375
S'                rest_action = _action().get(method, None)'
p135
sI376
S'                if not (rest_action and method == method.upper()'
p136
sI377
S'                        and callable(rest_action)):'
p137
sI378
S'                    raise HTTP(405, "method not allowed")'
p138
sI379
S'                try:'
p139
sI380
S'                    res = rest_action(*request.args, **request.vars)'
p140
sI381
S'                    if is_json and not isinstance(res, str):'
p141
sI382
S'                        res = json(res)'
p142
sI383
S'                    return res'
p143
ssg83
S'(_action=<function complaints>, *a=(), **b={})'
p144
sg85
S'f'
sa(dp145
g62
S'/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/applications/GRS/controllers/complaint.py'
p146
sg64
(dp147
S'index'
p148
S'0'
sS'db.complaints'
p149
S'<Table complaints (id, complaint_level_id, compl...r_id, redirected_to_type, redirected_to_user_id)>'
p150
sS'temp'
p151
g106
sS'builtinid'
p152
S'<built-in function id>'
p153
sS'all_made'
p154
S'<Rows (10)>'
p155
sS'global db'
p156
S'<DAL uri="sqlite://storage.sqlite">'
p157
sS'].complaint_id'
p158
g106
ssg70
I132
sg71
(dp159
I128
S'\t\t\t\t\tall_members = db(db.group_members.group_id==to_group).select()'
p160
sI129
S'\t\t\t\t\tfor index1 in range(len(all_members)):'
p161
sI130
S'\t\t\t\t\t\tuser1 = db.users(id=all_members[index1].user_id).id'
p162
sI131
S'\t\t\t\t\t\tif(user1==user_id1):'
p163
sI132
S'\t\t\t\t\t\t\ttemp=db.complaints(id=all_made[index].complaint_id)'
p164
sI133
S'\t\t\t\t\t\t\ttemp["bookmarked"]=check_bookmark(user_id,all_made[index].complaint_id)'
p165
sI134
S'\t\t\t\t\t\t\ttemp["to_resolve"]=check_resolve(user_id,all_made[index].complaint_id)'
p166
sI135
S'\t\t\t\t\t\t\ttemp["solvable"]=check_solvable(user_id,all_made[index].complaint_id)'
p167
sI136
S'\t\t\t\t\t\t\tret.append(temp)'
p168
sI127
S'\t\t\t\telse:'
p169
ssg83
S"(*tmp_args=('concern',), **status_input={})"
p170
sg85
S'GET'
p171
sa(dp172
g62
S'/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/gluon/packages/dal/pydal/objects.py'
p173
sg64
(dp174
S'orderby_on_limitby'
p175
g106
sS').first'
p176
g106
sS'builtinFalse'
p177
S'False'
p178
ssg70
I546
sg71
(dp179
I544
S'                                          for_update=for_update,'
p180
sI545
S'                                          orderby=orderby,'
p181
sI546
S'                                          orderby_on_limitby=False).first()'
p182
sI547
S'        else:'
p183
sI548
S'            return None'
p184
sI549
S''
sI550
S'    def __setitem__(self, key, value):'
p185
sI541
S'        elif kwargs:'
p186
sI542
S'            query = reduce(lambda a, b: a & b, [self[k] == v for k, v in iteritems(kwargs)])'
p187
sI543
S'            return self._db(query).select(limitby=(0, 1),'
p188
ssg83
S"(self=<Table complaints (id, complaint_level_id, compl...r_id, redirected_to_type, redirected_to_user_id)>, key=<function <lambda>>, **kwargs={'id': 40L})"
p189
sg85
S'__call__'
p190
sa(dp191
g62
S'/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/gluon/packages/dal/pydal/objects.py'
p192
sg64
(dp193
S'self.query'
p194
S'<Query (complaints.id = 40)>'
p195
sS'adapter.select'
p196
S'<bound method SQLiteAdapter.select of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p197
sS'fields'
p198
S'[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>]'
p199
sS'adapter'
p200
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p201
sS'attributes'
p202
S"{'for_update': False, 'limitby': (0, 1), 'orderby': None, 'orderby_on_limitby': False}"
p203
sS'self'
p204
S'<Set (complaints.id = 40)>'
p205
ssg70
I2020
sg71
(dp206
I2016
S"                                    attributes.get('left', None),"
p207
sI2017
S"                                    attributes.get('orderby', None),"
p208
sI2018
S"                                    attributes.get('groupby', None))"
p209
sI2019
S'        fields = adapter.expand_all(fields, tablenames)'
p210
sI2020
S'        return adapter.select(self.query, fields, attributes)'
p211
sI2021
S''
sI2022
S'    def iterselect(self, *fields, **attributes):'
p212
sI2023
S'        adapter = self.db._adapter'
p213
sI2024
S'        tablenames = adapter.tables(self.query,'
p214
sI2015
S"                                    attributes.get('join', None),"
p215
ssg83
S"(self=<Set (complaints.id = 40)>, *fields=[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>], **attributes={'for_update': False, 'limitby': (0, 1), 'orderby': None, 'orderby_on_limitby': False})"
p216
sg85
S'select'
p217
sa(dp218
g62
S'/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/gluon/packages/dal/pydal/adapters/sqlite.py'
p219
sg64
(dp220
S'fields'
p221
S'[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>]'
p222
sS'self'
p223
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p224
sS').select'
p225
S'<bound method SQLiteAdapter.select of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p226
sS'attributes'
p227
S"{'for_update': False, 'limitby': (0, 1), 'orderby': None, 'orderby_on_limitby': False}"
p228
sS'global SQLiteAdapter'
p229
S"<class 'pydal.adapters.sqlite.SQLiteAdapter'>"
p230
sS'query'
p231
S'<Query (complaints.id = 40)>'
p232
sS'builtinsuper'
p233
S"<type 'super'>"
p234
ssg70
I123
sg71
(dp235
I118
S'        Note that the entire database, rather than one record, is locked'
p236
sI119
S'        (it will be locked eventually anyway by the following UPDATE).'
p237
sI120
S'        """'
p238
sI121
S"        if attributes.get('for_update', False) and not 'cache' in attributes:"
p239
sI122
S"            self.execute('BEGIN IMMEDIATE TRANSACTION;')"
p240
sI123
S'        return super(SQLiteAdapter, self).select(query, fields, attributes)'
p241
sI124
S''
sI125
S''
sI126
S'SPATIALLIBS = {'
p242
sI127
S"    'Windows':'mod_spatialite.dll',"
p243
ssg83
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, query=<Query (complaints.id = 40)>, fields=[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>], attributes={'for_update': False, 'limitby': (0, 1), 'orderby': None, 'orderby_on_limitby': False})"
p244
sg85
g217
sa(dp245
g62
S'/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/gluon/packages/dal/pydal/adapters/base.py'
p246
sg64
(dp247
S'fields'
p248
S'[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>]'
p249
sS'self'
p250
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p251
sS'attributes'
p252
S"{'for_update': False, 'limitby': (0, 1), 'orderby': None, 'orderby_on_limitby': False}"
p253
sS'self._select_aux'
p254
S'<bound method SQLiteAdapter._select_aux of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p255
sS'sql'
p256
S"'SELECT  complaints.id, complaints.complaint_leve...ints WHERE (complaints.id = 40) LIMIT 1 OFFSET 0;'"
p257
ssg70
I1296
sg71
(dp258
I1291
S'            return cache_model('
p259
sI1292
S'                key,'
p260
sI1293
S'                lambda self=self,args=args:self._select_aux(*args),'
p261
sI1294
S'                time_expire)'
p262
sI1295
S'        else:'
p263
sI1296
S'            return self._select_aux(sql,fields,attributes)'
p264
sI1297
S''
sI1298
S'    def iterselect(self, query, fields, attributes):'
p265
sI1299
S'        sql = self._select(query, fields, attributes)'
p266
sI1300
S"        cacheable = attributes.get('cacheable', False)"
p267
ssg83
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, query=<Query (complaints.id = 40)>, fields=[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>], attributes={'for_update': False, 'limitby': (0, 1), 'orderby': None, 'orderby_on_limitby': False})"
p268
sg85
g217
sa(dp269
g62
S'/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/gluon/packages/dal/pydal/adapters/base.py'
p270
sg64
(dp271
S'self'
p272
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p273
sS'self.execute'
p274
S'<bound method SQLiteAdapter.execute of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p275
sS'sql'
p276
S"'SELECT  complaints.id, complaints.complaint_leve...ints WHERE (complaints.id = 40) LIMIT 1 OFFSET 0;'"
p277
ssg70
I1253
sg71
(dp278
I1248
S''
sI1249
S'    def _select_aux(self, sql, fields, attributes):'
p279
sI1250
S'        args_get = attributes.get'
p280
sI1251
S"        cache = args_get('cache',None)"
p281
sI1252
S'        if not cache:'
p282
sI1253
S'            self.execute(sql)'
p283
sI1254
S'            rows = self._fetchall()'
p284
sI1255
S'        else:'
p285
sI1256
S'            if isinstance(cache, dict):'
p286
sI1257
S"                cache_model = cache['model']"
p287
ssg83
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, sql='SELECT  complaints.id, complaints.complaint_leve...ints WHERE (complaints.id = 40) LIMIT 1 OFFSET 0;', fields=[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>], attributes={'for_update': False, 'limitby': (0, 1), 'orderby': None, 'orderby_on_limitby': False})"
p288
sg85
S'_select_aux'
p289
sa(dp290
g62
S'/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/gluon/packages/dal/pydal/adapters/base.py'
p291
sg64
(dp292
S'a'
S"('SELECT  complaints.id, complaints.complaint_leve...ints WHERE (complaints.id = 40) LIMIT 1 OFFSET 0;',)"
p293
sS'self'
p294
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p295
sS'b'
g45
sS'self.log_execute'
p296
S'<bound method SQLiteAdapter.log_execute of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p297
ssg70
I1388
sg71
(dp298
I1383
S'        self.db._timings.append((command,time.time()-t0))'
p299
sI1384
S'        del self.db._timings[:-TIMINGSSIZE]'
p300
sI1385
S'        return ret'
p301
sI1386
S''
sI1387
S'    def execute(self, *a, **b):'
p302
sI1388
S'        return self.log_execute(*a, **b)'
p303
sI1389
S''
sI1390
S'    def execute_test_query(self):'
p304
sI1391
S'        return self.execute(self.test_query)'
p305
sI1392
S''
ssg83
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, *a=('SELECT  complaints.id, complaints.complaint_leve...ints WHERE (complaints.id = 40) LIMIT 1 OFFSET 0;',), **b={})"
p306
sg85
S'execute'
p307
sa(dp308
g62
S'/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/gluon/packages/dal/pydal/adapters/base.py'
p309
sg64
(dp310
S'a'
S"('SELECT  complaints.id, complaints.complaint_leve...ints WHERE (complaints.id = 40) LIMIT 1 OFFSET 0;',)"
p311
sS'b'
g45
sS'self'
p312
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p313
sS'ret'
p314
g106
sS'command'
p315
S"'SELECT  complaints.id, complaints.complaint_leve...ints WHERE (complaints.id = 40) LIMIT 1 OFFSET 0;'"
p316
sS'self.get_cursor'
p317
S'<bound method SQLiteAdapter.get_cursor of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p318
sS').execute'
p319
g106
ssg70
I1382
sg71
(dp320
I1377
S'            command = self.filter_sql_command(command)'
p321
sI1378
S'        if self.db._debug:'
p322
sI1379
S"            self.db.logger.debug('SQL: %s' % command)"
p323
sI1380
S'        self.db._lastsql = command'
p324
sI1381
S'        t0 = time.time()'
p325
sI1382
S'        ret = self.get_cursor().execute(command, *a[1:], **b)'
p326
sI1383
S'        self.db._timings.append((command,time.time()-t0))'
p327
sI1384
S'        del self.db._timings[:-TIMINGSSIZE]'
p328
sI1385
S'        return ret'
p329
sI1386
S''
ssg83
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, *a=('SELECT  complaints.id, complaints.complaint_leve...ints WHERE (complaints.id = 40) LIMIT 1 OFFSET 0;',), **b={})"
p330
sg85
S'log_execute'
p331
sa(dp332
g62
S'/usr/lib/python2.7/sqlite3/dbapi2.py'
p333
sg64
(dp334
S'timepart'
p335
g106
sS'val.split'
p336
S'<built-in method split of str object>'
p337
sS'datepart'
p338
g106
sS'val'
p339
S"'1'"
p340
ssg70
I68
sg71
(dp341
I64
S'    def convert_date(val):'
p342
sI65
S'        return datetime.date(*map(int, val.split("-")))'
p343
sI66
S''
sI67
S'    def convert_timestamp(val):'
p344
sI68
S'        datepart, timepart = val.split(" ")'
p345
sI69
S'        year, month, day = map(int, datepart.split("-"))'
p346
sI70
S'        timepart_full = timepart.split(".")'
p347
sI71
S'        hours, minutes, seconds = map(int, timepart_full[0].split(":"))'
p348
sI72
S'        if len(timepart_full) == 2:'
p349
sI63
S''
ssg83
S"(val='1')"
p350
sg85
S'convert_timestamp'
p351
sasS'pyver'
p352
S'Python 2.7.10: /usr/bin/python (prefix: /usr)'
p353
sS'session'
p354
g57
(S's\xa1\x0b\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">auth</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">expiration</td><td style="vertical-align:top;">:</td><td><div>3600</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">hmac_key</td><td style="vertical-align:top;">:</td><td><div>4952c9a0-22c3-4555-90a8-3bc03e3f17cb</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_visit</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 3, 29, 23, 29, 5, 74464)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">contact_no</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">degree_name</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">email_id</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">first_name</td><td style="vertical-align:top;">:</td><td><div>student</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">hostel_id</td><td style="vertical-align:top;">:</td><td><div>53L</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">id</td><td style="vertical-align:top;">:</td><td><div>19L</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_name</td><td style="vertical-align:top;">:</td><td><div>2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">picture_id</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_id</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_key</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">username</td><td style="vertical-align:top;">:</td><td><div>std2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">year_of_degree</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user_groups</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_orderby</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_query</td><td style="vertical-align:top;">:</td><td><div>db.complaint_status.id&gt;0</div></td></tr></table></div>'
tRp355
sS'etype'
p356
S"<type 'exceptions.ValueError'>"
p357
sS'date'
p358
S'Tue Mar 29 23:31:32 2016'
p359
sS'response'
p360
g57
(S's\xb8?\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x7f9a85413d18&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_grs</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-ac3fbcd4-79ed-4cd7-bcc9-6e4913643197<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">form_label_separator</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">formstyle</td><td style="vertical-align:top;">:</td><td><div>bootstrap3_inline</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">google_analytics_id</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">Content-Type</td><td style="vertical-align:top;">:</td><td><div>application/json</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">logo</td><td style="vertical-align:top;">:</td><td><div><a class="navbar-brand" href="http://www.web2py.com/" id="web2py-logo"><b>web<span>2</span>py</b>&trade;&nbsp;</a></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div><table><tr><td><div>Home</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>My Sites</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/site</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>This App</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>#</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>Design</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/design/GRS</div></td></tr></table></div></td></tr><tr><td><div><li class="divider"></li></div></td></tr><tr><td><div><table><tr><td><div>Controller</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/edit/GRS/controllers/complaint.py</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>View</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/edit/GRS/views/complaint/complaints.html</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>DB Model</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/edit/GRS/models/db.py</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Menu Model</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/edit/GRS/models/menu.py</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Config.ini</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/edit/GRS/private/appconfig.ini</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Layout</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/edit/GRS/views/layout.html</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Stylesheet</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/edit/GRS/static/css/web2py-bootstrap3.css</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Database</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/appadmin</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Errors</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/errors/GRS</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>About</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/about/GRS</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>web2py.com</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>#</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>Download</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/examples/default/download</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Support</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/examples/default/support</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Demo</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://web2py.com/demo_admin</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Quick Examples</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://web2py.com/examples/default/examples</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>FAQ</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://web2py.com/AlterEgo</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Videos</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/examples/default/videos/</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Free Applications</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://web2py.com/appliances</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Plugins</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://web2py.com/plugins</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Recipes</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://web2pyslices.com/</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Documentation</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>#</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>Online book</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book</div></td></tr></table></div></td></tr><tr><td><div><li class="divider"></li></div></td></tr><tr><td><div><table><tr><td><div>Preface</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/00</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Introduction</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/01</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Python</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/02</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Overview</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/03</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>The Core</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/04</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>The Views</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/05</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Database</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/06</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Forms and Validators</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/07</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Email and SMS</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/08</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Access Control</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/09</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Services</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/10</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Ajax Recipes</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/11</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Components and Plugins</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/12</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Deployment Recipes</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/13</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Other Recipes</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/14</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Helping web2py</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/15</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Buy web2py\'s book</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://stores.lulu.com/web2py</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Community</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>None</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>Groups</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/examples/default/usergroups</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Twitter</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://twitter.com/web2py</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Live Chat</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://webchat.freenode.net/?channels=web2py</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">author</td><td style="vertical-align:top;">:</td><td><div>Your Name &lt;you@example.com&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">description</td><td style="vertical-align:top;">:</td><td><div>a cool new app</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generator</td><td style="vertical-align:top;">:</td><td><div>Web2py Web Framework</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">keywords</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>web2py</div></td></tr><tr><td><div>python</div></td></tr><tr><td><div>framework</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^complaint/\\w+\\.py$</div></td></tr><tr><td><div>^complaint/complaints/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_grs</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/applications/GRS/sessions/192/09f/127.0.0.1-ac3fbcd4-79ed-4cd7-bcc9-6e4913643197&#x27;, mode &#x27;rb+&#x27; at 0x7f9ab8170390&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/applications/GRS/sessions/127.0.0.1-ac3fbcd4-79ed-4cd7-bcc9-6e4913643197</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>52924a13d112eb79fd2fb38b18de665f</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-ac3fbcd4-79ed-4cd7-bcc9-6e4913643197</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_grs</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_locked</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>GRS</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">subtitle</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">title</td><td style="vertical-align:top;">:</td><td><div>Grs</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>generic.json</div></td></tr></table></div>'
tRp361
sS'locals'
p362
(dp363
S'val'
p364
S"'1'"
p365
sssS'traceback'
p366
S'Traceback (most recent call last):\n  File "/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/applications/GRS/controllers/complaint.py", line 761, in <module>\n  File "/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/gluon/globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/gluon/globals.py", line 380, in f\n    res = rest_action(*request.args, **request.vars)\n  File "/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/applications/GRS/controllers/complaint.py", line 132, in GET\n    temp=db.complaints(id=all_made[index].complaint_id)\n  File "/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/gluon/packages/dal/pydal/objects.py", line 546, in __call__\n    orderby_on_limitby=False).first()\n  File "/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/gluon/packages/dal/pydal/objects.py", line 2020, in select\n    return adapter.select(self.query, fields, attributes)\n  File "/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/gluon/packages/dal/pydal/adapters/sqlite.py", line 123, in select\n    return super(SQLiteAdapter, self).select(query, fields, attributes)\n  File "/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1296, in select\n    return self._select_aux(sql,fields,attributes)\n  File "/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1253, in _select_aux\n    self.execute(sql)\n  File "/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1388, in execute\n    return self.log_execute(*a, **b)\n  File "/home/user/Local Disk E/COP290/assignment2_1/GRS_Grievances_Resolution_System/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1382, in log_execute\n    ret = self.get_cursor().execute(command, *a[1:], **b)\n  File "/usr/lib/python2.7/sqlite3/dbapi2.py", line 68, in convert_timestamp\n    datepart, timepart = val.split(" ")\nValueError: need more than 1 value to unpack\n'
p367
s.